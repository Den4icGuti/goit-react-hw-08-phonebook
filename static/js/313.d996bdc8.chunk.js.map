{"version":3,"file":"static/js/313.d996bdc8.chunk.js","mappings":"8OACA,G,QAAgC,sCAAhC,EAA6H,kCAA7H,EAA4K,kCAA5K,EAAgO,uC,SCsEhO,EAhEsB,WACpB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAiB,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACxC,OAAQD,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,SAcN,OACE,6BACE,SAAC,KAAD,CAAgBC,MAAM,OAAOC,SAAS,aAAaC,UAAW,OAE9D,kBAAMC,UAAWC,EAAsBC,SAdpB,SAAAC,GACrBA,EAAEC,iBACGjB,GAAUE,GAIfE,GAASc,EAAAA,EAAAA,IAAM,CAAElB,MAAAA,EAAOE,SAAAA,KArBxBD,EAAS,IACTE,EAAY,KAiBVgB,EAAAA,GAAAA,KAAW,8BAWX,WACE,eAAIN,UAAWC,EAAf,4BACA,gBAAKD,UAAWC,EAAhB,UACE,kBACEM,KAAK,QACLZ,KAAK,QACLC,MAAOT,EACPqB,SAAUf,EACVgB,YAAY,WACZC,aAAa,WAGjB,gBAAKV,UAAWC,EAAhB,UACE,kBACEM,KAAK,WACLZ,KAAK,WACLC,MAAOP,EACPmB,SAAUf,EACVgB,YAAY,mBAGhB,mBAAQT,UAAWC,EAAwBM,KAAK,SAAhD","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Pages/Authorization/Authorization.module.css?1c13","components/Pages/Authorization/Authorization.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorization\":\"Authorization_authorization__-eREO\",\"fadeForm\":\"Authorization_fadeForm__37PK8\",\"form_title\":\"Authorization_form_title__vXiPH\",\"form_field\":\"Authorization_form_field__eBn3f\",\"button_register\":\"Authorization_button_register__v0BwW\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from 'redux/auth/auth-operation';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styles from '../Authorization/Authorization.module.css';\n\nconst Authorization = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const onHandleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const onHandleSubmit = e => {\n    e.preventDefault();\n    if (!email || !password) {\n      toast.warn('All fields must be filled');\n      return;\n    }\n    dispatch(login({ email, password }));\n    reset();\n  };\n\n  return (\n    <main>\n      <ToastContainer theme=\"dark\" position=\"top-center\" autoClose={3000} />\n\n      <form className={styles.authorization} onSubmit={onHandleSubmit}>\n        <h1 className={styles.form_title}>Authorization</h1>\n        <div className={styles.form_field}>\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={onHandleChange}\n            placeholder=\"Email...\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className={styles.form_field}>\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={onHandleChange}\n            placeholder=\"Password...\"\n          />\n        </div>\n        <button className={styles.button_register} type=\"submit\">\n          Authorization\n        </button>\n      </form>\n    </main>\n  );\n};\n\nexport default Authorization;\n"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","onHandleChange","target","name","value","theme","position","autoClose","className","styles","onSubmit","e","preventDefault","login","toast","type","onChange","placeholder","autoComplete"],"sourceRoot":""}